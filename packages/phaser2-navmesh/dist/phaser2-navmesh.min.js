!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.Phaser2NavMeshPlugin=n():t.Phaser2NavMeshPlugin=n()}(window,function(){return function(t){var n={};function e(i){if(n[i])return n[i].exports;var s=n[i]={i:i,l:!1,exports:{}};return t[i].call(s.exports,s,s.exports,e),s.l=!0,s.exports}return e.m=t,e.c=n,e.d=function(t,n,i){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:i})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(e.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var s in t)e.d(i,s,function(n){return t[n]}.bind(null,s));return i},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=1)}([function(t,n,e){var i,s,o;!function(n){"object"==typeof t.exports?t.exports=n():(s=[],void 0===(o="function"==typeof(i=n)?i.apply(void 0,s):i)||(t.exports=o))}(function(){function t(t){for(var n=t,e=[];n.parent;)e.unshift(n),n=n.parent;return e}var n={search:function(e,i,o,r){e.cleanDirty();var h=(r=r||{}).heuristic||n.heuristics.manhattan,a=r.closest||!1,c=new s(function(t){return t.f}),u=i;for(i.h=h(i,o),e.markDirty(i),c.push(i);c.size()>0;){var l=c.pop();if(l===o)return t(l);l.closed=!0;for(var d=e.neighbors(l),p=0,g=d.length;p<g;++p){var y=d[p];if(!y.closed&&!y.isWall()){var f=l.g+y.getCost(l),b=y.visited;(!b||f<y.g)&&(y.visited=!0,y.parent=l,y.h=y.h||h(y,o),y.g=f,y.f=y.g+y.h,e.markDirty(y),a&&(y.h<u.h||y.h===u.h&&y.g<u.g)&&(u=y),b?c.rescoreElement(y):c.push(y))}}}return a?t(u):[]},heuristics:{manhattan:function(t,n){return Math.abs(n.x-t.x)+Math.abs(n.y-t.y)},diagonal:function(t,n){var e=Math.sqrt(2),i=Math.abs(n.x-t.x),s=Math.abs(n.y-t.y);return 1*(i+s)+(e-2)*Math.min(i,s)}},cleanNode:function(t){t.f=0,t.g=0,t.h=0,t.visited=!1,t.closed=!1,t.parent=null}};function e(t,n){n=n||{},this.nodes=[],this.diagonal=!!n.diagonal,this.grid=[];for(var e=0;e<t.length;e++){this.grid[e]=[];for(var s=0,o=t[e];s<o.length;s++){var r=new i(e,s,o[s]);this.grid[e][s]=r,this.nodes.push(r)}}this.init()}function i(t,n,e){this.x=t,this.y=n,this.weight=e}function s(t){this.content=[],this.scoreFunction=t}return e.prototype.init=function(){this.dirtyNodes=[];for(var t=0;t<this.nodes.length;t++)n.cleanNode(this.nodes[t])},e.prototype.cleanDirty=function(){for(var t=0;t<this.dirtyNodes.length;t++)n.cleanNode(this.dirtyNodes[t]);this.dirtyNodes=[]},e.prototype.markDirty=function(t){this.dirtyNodes.push(t)},e.prototype.neighbors=function(t){var n=[],e=t.x,i=t.y,s=this.grid;return s[e-1]&&s[e-1][i]&&n.push(s[e-1][i]),s[e+1]&&s[e+1][i]&&n.push(s[e+1][i]),s[e]&&s[e][i-1]&&n.push(s[e][i-1]),s[e]&&s[e][i+1]&&n.push(s[e][i+1]),this.diagonal&&(s[e-1]&&s[e-1][i-1]&&n.push(s[e-1][i-1]),s[e+1]&&s[e+1][i-1]&&n.push(s[e+1][i-1]),s[e-1]&&s[e-1][i+1]&&n.push(s[e-1][i+1]),s[e+1]&&s[e+1][i+1]&&n.push(s[e+1][i+1])),n},e.prototype.toString=function(){for(var t=[],n=this.grid,e=0;e<n.length;e++){for(var i=[],s=n[e],o=0;o<s.length;o++)i.push(s[o].weight);t.push(i.join(" "))}return t.join("\n")},i.prototype.toString=function(){return"["+this.x+" "+this.y+"]"},i.prototype.getCost=function(t){return t&&t.x!=this.x&&t.y!=this.y?1.41421*this.weight:this.weight},i.prototype.isWall=function(){return 0===this.weight},s.prototype={push:function(t){this.content.push(t),this.sinkDown(this.content.length-1)},pop:function(){var t=this.content[0],n=this.content.pop();return this.content.length>0&&(this.content[0]=n,this.bubbleUp(0)),t},remove:function(t){var n=this.content.indexOf(t),e=this.content.pop();n!==this.content.length-1&&(this.content[n]=e,this.scoreFunction(e)<this.scoreFunction(t)?this.sinkDown(n):this.bubbleUp(n))},size:function(){return this.content.length},rescoreElement:function(t){this.sinkDown(this.content.indexOf(t))},sinkDown:function(t){for(var n=this.content[t];t>0;){var e=(t+1>>1)-1,i=this.content[e];if(!(this.scoreFunction(n)<this.scoreFunction(i)))break;this.content[e]=n,this.content[t]=i,t=e}},bubbleUp:function(t){for(var n=this.content.length,e=this.content[t],i=this.scoreFunction(e);;){var s,o=t+1<<1,r=o-1,h=null;if(r<n){var a=this.content[r];(s=this.scoreFunction(a))<i&&(h=r)}if(o<n){var c=this.content[o];this.scoreFunction(c)<(null===h?i:s)&&(h=o)}if(null===h)break;this.content[t]=this.content[h],this.content[h]=e,t=h}}},{astar:n,Graph:e}})},function(t,n,e){"use strict";e.r(n);var i=e(0),s=e.n(i);class o{constructor(t,n){this.x=t||0,this.y=n||0}equals(t){return this.x===t.x&&this.y===t.y}angle(t){return Math.atan2(t.y-this.y,t.x-this.x)}distance(t){const n=t.x-this.x,e=t.y-this.y;return Math.sqrt(n*n+e*e)}add(t){this.x+=t.x,this.y+=t.y}subtract(t){this.x-=t.x,this.y-=t.y}clone(){return new o(this.x,this.y)}}class r{constructor(t,n){this.id=t,this.polygon=n,this.edges=n.edges,this.neighbors=[],this.portals=[],this.centroid=this.calculateCentroid(),this.boundingRadius=this.calculateRadius(),this.weight=1}getPoints(){return this.polygon.points}contains(t){return this.polygon.contains(t.x,t.y)||this.isPointOnEdge(t)}calculateCentroid(){const t=new o(0,0),n=this.polygon.points.length;return this.polygon.points.forEach(n=>t.add(n)),t.x/=n,t.y/=n,t}calculateRadius(){let t=0;for(const n of this.polygon.points){const e=this.centroid.distance(n);e>t&&(t=e)}return t}isPointOnEdge({x:t,y:n}){for(const e of this.edges)if(e.pointOnSegment(t,n))return!0;return!1}destroy(){this.neighbors=[],this.portals=[]}toString(){return`NavPoly(id: ${this.id} at: ${this.centroid})`}isWall(){return 0===this.weight}centroidDistance(t){return this.centroid.distance(t.centroid)}getCost(t){return this.centroidDistance(t)}}class h{constructor(t){this.nodes=t,this.init()}neighbors(t){return t.neighbors}navHeuristic(t,n){return t.centroidDistance(n)}destroy(){this.cleanDirty(),this.nodes=[]}}h.prototype.init=s.a.Graph.prototype.init,h.prototype.cleanDirty=s.a.Graph.prototype.cleanDirty,h.prototype.markDirty=s.a.Graph.prototype.markDirty;var a=h;function c(t,n,e){const i=n.x-t.x,s=n.y-t.y;return(e.x-t.x)*s-i*(e.y-t.y)}function u(t,n,e=1e-4){return Math.abs(t-n)<=e}function l(t,n){let e=t-n;const i=e+Math.PI,s=2*Math.PI;return e=i-Math.floor(i/s)*s,e-=Math.PI}function d(t,n,e=1e-4){const i=c(t.start,t.end,n.start),s=c(t.start,t.end,n.end);return!(!u(i,0,e)||!u(s,0,e))}var p=class{constructor(){this.portals=[]}push(t,n=null){null===n&&(n=t),this.portals.push({left:t,right:n})}stringPull(){var t,n,e,i=this.portals,s=[],o=0,r=0,h=0;t=i[0].left,n=i[0].left,e=i[0].right,s.push(t);for(var a=1;a<i.length;a++){var u=i[a].left,l=i[a].right;if(c(t,e,l)<=0){if(!(t.equals(e)||c(t,n,l)>0)){s.push(n),n=t=n,e=t,r=o=r,h=o,a=o;continue}e=l,h=a}if(c(t,n,u)>=0){if(!(t.equals(n)||c(t,e,u)<0)){s.push(e),n=t=e,e=t,r=o=h,h=o,a=o;continue}n=u,r=a}}return 0!==s.length&&s[s.length-1].equals(i[i.length-1].left)||s.push(i[i.length-1].left),this.path=s,s}};class g{constructor(t,n,e,i){this.start=new o(t,n),this.end=new o(e,i),this.left=Math.min(t,e),this.right=Math.max(t,e),this.top=Math.min(n,i),this.bottom=Math.max(n,i)}pointOnSegment(t,n){return t>=this.left&&t<=this.right&&n>=this.top&&n<=this.bottom&&this.pointOnLine(t,n)}pointOnLine(t,n){return(t-this.left)*(this.bottom-this.top)==(this.right-this.left)*(n-this.top)}}class y{constructor(t,n=!0){this.points=t,this.edges=[];for(let n=1;n<t.length;n++){const e=t[n-1],i=t[n];this.edges.push(new g(e.x,e.y,i.x,i.y))}if(n){const n=t[0],e=t[t.length-1];this.edges.push(new g(n.x,n.y,e.x,e.y))}}contains(t,n){let e=!1;for(let i=-1,s=this.points.length-1;++i<this.points.length;s=i){const o=this.points[i].x,r=this.points[i].y,h=this.points[s].x,a=this.points[s].y;(r<=n&&n<a||a<=n&&n<r)&&t<(h-o)*(n-r)/(a-r)+o&&(e=!e)}return e}}var f=class{constructor(t,n=0){this._meshShrinkAmount=n;const e=t.map(t=>{const n=t.map(t=>new o(t.x,t.y));return new y(n)});this._navPolygons=e.map((t,n)=>new r(n,t)),this._calculateNeighbors(),this._graph=new a(this._navPolygons)}getPolygons(){return this._navPolygons}destroy(){this._graph.destroy();for(const t of this._navPolygons)t.destroy();this._navPolygons=[]}findPath(t,n){let e,i,r=null,h=null,a=Number.MAX_VALUE,c=Number.MAX_VALUE;const u=new o(t.x,t.y),l=new o(n.x,n.y);for(const t of this._navPolygons)i=t.boundingRadius,(e=t.centroid.distance(u))<=a&&e<=i&&t.contains(u)&&(r=t,a=e),(e=t.centroid.distance(l))<=c&&e<=i&&t.contains(l)&&(h=t,c=e);if(!r&&this._meshShrinkAmount>0)for(const t of this._navPolygons)if(i=t.boundingRadius+this._meshShrinkAmount,(e=t.centroid.distance(u))<=i){const{distance:n}=this._projectPointToPolygon(u,t);n<=this._meshShrinkAmount&&n<a&&(r=t,a=n)}if(!h&&this._meshShrinkAmount>0)for(const t of this._navPolygons)if(i=t.boundingRadius+this._meshShrinkAmount,(e=t.centroid.distance(l))<=i){const{distance:n}=this._projectPointToPolygon(l,t);n<=this._meshShrinkAmount&&n<c&&(h=t,c=n)}if(!r||!h)return null;if(r===h)return[u,l];const d=s.a.astar.search(this._graph,r,h,{heuristic:this._graph.navHeuristic});if(0===d.length)return null;d.unshift(r);const g=new p;g.push(u);for(let t=0;t<d.length-1;t++){const n=d[t],e=d[t+1];let i=null;for(let t=0;t<n.neighbors.length;t++)n.neighbors[t].id===e.id&&(i=n.portals[t]);g.push(i.start,i.end)}g.push(l),g.stringPull();let y=null;const f=[];for(const t of g.path){const n=t.clone();y&&n.equals(y)||f.push(n),y=n}return f}_calculateNeighbors(){for(let t=0;t<this._navPolygons.length;t++){const n=this._navPolygons[t];for(let e=t+1;e<this._navPolygons.length;e++){const t=this._navPolygons[e];if(!(n.centroid.distance(t.centroid)>n.boundingRadius+t.boundingRadius))for(const e of n.edges)for(const i of t.edges){if(!d(e,i))continue;const s=this._getSegmentOverlap(e,i);if(!s)continue;n.neighbors.push(t),t.neighbors.push(n);const[o,r]=s;let h=n.centroid.angle(e.start),a=n.centroid.angle(s[0]),c=n.centroid.angle(s[1]),u=l(h,a),p=l(h,c);u<p?n.portals.push(new g(o.x,o.y,r.x,r.y)):n.portals.push(new g(r.x,r.y,o.x,o.y)),h=t.centroid.angle(i.start),a=t.centroid.angle(s[0]),c=t.centroid.angle(s[1]),(u=l(h,a))<(p=l(h,c))?t.portals.push(new g(o.x,o.y,r.x,r.y)):t.portals.push(new g(r.x,r.y,o.x,o.y))}}}}_getSegmentOverlap(t,n){const e=[{line:t,point:t.start},{line:t,point:t.end},{line:n,point:n.start},{line:n,point:n.end}];e.sort(function(t,n){return t.point.x<n.point.x?-1:t.point.x>n.point.x?1:t.point.y<n.point.y?-1:t.point.y>n.point.y?1:0});const i=e[0].line===e[1].line,s=e[1].point.equals(e[2].point);return i||s?null:[e[1].point,e[2].point]}_projectPointToPolygon(t,n){let e=null,i=Number.MAX_VALUE;for(const s of n.edges){const n=this._projectPointToEdge(t,s),o=t.distance(n);(null===e||o<i)&&(i=o,e=n)}return{point:e,distance:i}}_distanceSquared(t,n){const e=n.x-t.x,i=n.y-t.y;return e*e+i*i}_projectPointToEdge(t,n){const e=n.start,i=n.end,s=this._distanceSquared(e,i);let r=((t.x-e.x)*(i.x-e.x)+(t.y-e.y)*(i.y-e.y))/s;return r=function(t,n,e){return t<n&&(t=n),t>e&&(t=e),t}(r,0,1),new o(e.x+r*(i.x-e.x),e.y+r*(i.y-e.y))}};class b{constructor(t,n,e,i=0){this.key=n,this.plugin=t,this.game=t.game,this.debugGraphics=null,this.navMesh=new f(e,i)}findPath(t,n,e=Phaser.Point){const i=this.navMesh.findPath(t,n);return i?i.map(({x:t,y:n})=>new e(t,n)):i}enableDebug(t){return t||this.debugGraphics?t&&(this.debugGraphics&&this.debugGraphics.destroy(),this.debugGraphics=t):this.debugGraphics=this.game.add.graphics(),this.debugGraphics.visible=!0,this.debugGraphics}disableDebug(){this.debugGraphics&&(this.debugGraphics.visible=!1)}isDebugEnabled(){return this.debugGraphics&&this.debugGraphics.visible}debugDrawClear(){this.debugGraphics&&this.debugGraphics.clear()}debugDrawMesh({drawCentroid:t=!0,drawBounds:n=!1,drawNeighbors:e=!0,drawPortals:i=!0,palette:s=[41136,6965820,13382463,15427649,15583569]}={}){if(!this.debugGraphics)return;this.navMesh.getPolygons().forEach(o=>{const r=s[o.id%s.length];if(this.debugGraphics.lineWidth=0,this.debugGraphics.beginFill(r),this.debugGraphics.drawPolygon(new Phaser.Polygon(...o.getPoints())),this.debugGraphics.endFill(),t&&(this.debugGraphics.beginFill(0),this.debugGraphics.drawEllipse(o.centroid.x,o.centroid.y,4,4),this.debugGraphics.endFill()),n){this.debugGraphics.lineStyle(1,16777215);const t=o.boundingRadius;this.debugGraphics.drawEllipse(o.centroid.x,o.centroid.y,t,t)}e&&(this.debugGraphics.lineStyle(2,0),o.neighbors.forEach(t=>{this.debugGraphics.moveTo(o.centroid.x,o.centroid.y),this.debugGraphics.lineTo(t.centroid.x,t.centroid.y)})),i&&(this.debugGraphics.lineStyle(10,0),o.portals.forEach(t=>{this.debugGraphics.moveTo(t.start.x,t.start.y),this.debugGraphics.lineTo(t.end.x,t.end.y)}))})}debugDrawPath(t,n=65280,e=10,i=1){if(this.debugGraphics&&t&&t.length){this.debugGraphics.lineStyle(e,n,i),this.debugGraphics.drawShape(new Phaser.Polygon(...t)),this.debugGraphics.beginFill(n,i);const s=.5*e;if(this.debugGraphics.drawEllipse(t[0].x,t[0].y,s,s),t.length>1){const n=t[t.length-1];this.debugGraphics.drawEllipse(n.x,n.y,s,s)}this.debugGraphics.endFill()}}destroy(){this.navMesh&&this.navMesh.destroy(),this.debugGraphics&&this.debugGraphics.destroy(),this.plugin.removeMesh(this.key),this.navMesh=void 0,this.debugGraphics=void 0,this.plugin=void 0,this.scene=void 0}}e.d(n,"Phaser2NavMesh",function(){return b});n.default=class extends Phaser.Plugin{constructor(t,n){super(t,n),this.phaserNavMeshes={}}destroy(){const t=Object.values(this.phaserNavMeshes);this.phaserNavMeshes={},t.forEach(t=>t.destroy()),this.game=void 0}removeMesh(t){this.phaserNavMeshes[t]&&(this.phaserNavMeshes[t]=void 0)}buildMeshFromTiled(t,n,e=0){if(this.phaserNavMeshes[t])return console.warn(`NavMeshPlugin: a navmesh already exists with the given key: ${t}`),this.phaserNavMeshes[t];n&&0!==n.length||console.warn(`NavMeshPlugin: The given tilemap object layer is empty or undefined: ${n}`);const i=(n||[]).map(t=>{const n=t.y,e=t.y+t.height,i=t.x,s=t.x+t.width;return[{x:i,y:n},{x:i,y:e},{x:s,y:e},{x:s,y:n}]}),s=new b(this,t,i,e);return this.phaserNavMeshes[t]=s,s}}}]).default});
//# sourceMappingURL=phaser2-navmesh.min.js.map